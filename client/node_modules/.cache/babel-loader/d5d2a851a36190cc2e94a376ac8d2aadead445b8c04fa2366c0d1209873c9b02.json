{"ast":null,"code":"var _jsxFileName = \"E:\\\\WhatsApp clone\\\\client\\\\src\\\\chat\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport { Box, styled } from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport { emptyProfilePicture } from \"../constants/data\";\nimport Footer from \"./Footer\";\nimport { AccountContext } from \"../context/AccountProvider\";\nimport { useState } from \"react\";\nimport { newMessage, getMessages } from \"../service/api\";\nimport { useEffect } from \"react\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Box)`\n    background-image: url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'});\n    background-size: 50%;\n`;\n_c = Wrapper;\nconst Component = styled(Box)`\nheight: 78.75vh;\noverflow-y: scroll;\n`;\n_c2 = Component;\nconst Container = styled(Box)`\npadding: 1px 8px;\n`;\nconst Messages = _ref => {\n  _s();\n  let {\n    person,\n    conversation\n  } = _ref;\n  const [value, setValue] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const {\n    account\n  } = useContext(AccountContext);\n  useEffect(() => {\n    const getMessageDetails = async () => {\n      let data = await getMessages(conversation._id);\n      console.log(data);\n      setMessages(data);\n    };\n    conversation._id && getMessageDetails();\n  }, [person._id, conversation._id]);\n  const sendText = async e => {\n    const code = e.keyCode || e.which;\n    if (code == 13) {\n      let message = {\n        senderId: account.sub,\n        receiverId: person.sub,\n        conversationId: conversation._id,\n        type: 'text',\n        text: value\n      };\n      await newMessage(message);\n      setValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Component, {\n      children: messages && messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      sendText: sendText,\n      setValue: setValue,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"b9YHPAuxmfgCGEhnJfA9kfVZljY=\");\n_c3 = Messages;\nexport default Messages;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Component\");\n$RefreshReg$(_c3, \"Messages\");","map":{"version":3,"names":["Box","styled","React","useContext","emptyProfilePicture","Footer","AccountContext","useState","newMessage","getMessages","useEffect","Message","jsxDEV","_jsxDEV","Wrapper","_c","Component","_c2","Container","Messages","_ref","_s","person","conversation","value","setValue","messages","setMessages","account","getMessageDetails","data","_id","console","log","sendText","e","code","keyCode","which","message","senderId","sub","receiverId","conversationId","type","text","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["E:/WhatsApp clone/client/src/chat/Messages.js"],"sourcesContent":["import { Box, styled } from \"@mui/material\";\r\nimport React, { useContext } from \"react\";\r\nimport { emptyProfilePicture } from \"../constants/data\";\r\nimport Footer from \"./Footer\";\r\nimport { AccountContext } from \"../context/AccountProvider\";\r\nimport { useState } from \"react\";\r\nimport { newMessage, getMessages } from \"../service/api\";\r\nimport { useEffect } from \"react\";\r\nimport Message from \"./Message\";\r\n\r\n\r\nconst Wrapper = styled(Box)`\r\n    background-image: url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'});\r\n    background-size: 50%;\r\n`;\r\nconst Component=styled(Box)`\r\nheight: 78.75vh;\r\noverflow-y: scroll;\r\n`\r\n\r\nconst Container=styled(Box)`\r\npadding: 1px 8px;\r\n`\r\n\r\nconst Messages=({person, conversation})=>{\r\n\r\n    const [value, setValue]=useState(\"\");\r\n\r\n    const [messages, setMessages]=useState([]);\r\n\r\n    const {account}=useContext(AccountContext);\r\n\r\n    useEffect(()=>{\r\n        const getMessageDetails=async ()=>{\r\n            let data=await getMessages(conversation._id);\r\n            console.log(data);\r\n            setMessages(data);\r\n        }\r\n        conversation._id && getMessageDetails();\r\n    }, [person._id, conversation._id]);\r\n\r\n    const sendText=async (e)=>{ \r\n        const code=e.keyCode || e.which;\r\n        if(code==13){\r\n            let message={\r\n                senderId: account.sub,\r\n                receiverId: person.sub,\r\n                conversationId: conversation._id,\r\n                type: 'text',\r\n                text: value,\r\n            }\r\n            await newMessage(message);\r\n\r\n            setValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Component>\r\n            {\r\n                messages && messages.map(message=>(\r\n                    <Message message={message}/>\r\n                ))\r\n            }\r\n            </Component>\r\n            <Footer \r\n            sendText={sendText}\r\n            setValue={setValue}\r\n            value={value}\r\n            />\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Messages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}